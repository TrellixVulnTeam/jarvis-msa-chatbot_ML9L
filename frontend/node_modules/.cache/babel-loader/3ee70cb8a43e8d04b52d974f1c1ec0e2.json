{"ast":null,"code":"var _jsxFileName = \"C:\\\\jarvis\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\ChatModules.js\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chatRequest } from \"features/chatbot/reducer/chatSlice\";\nimport Test from \"features/diary/components/Test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Ask(props) {\n  const dispatch = useDispatch();\n  const key = props.previousStep.key; // const botAnswer = {\n  //   [key]:useSelector(state => state.chatData[key])\n  // }\n\n  const [text, setText] = useState('');\n  const [count, setCount] = useState(0);\n  const [test, setTest] = useState('');\n  const [chatanswer, setChatAnswer] = useState({\n    data: {\n      chatAnswer: \"\",\n      chatKey: \"\"\n    }\n  });\n  alert(` test :: ${test}`);\n  alert(` count :: ${count}`);\n  useEffect(() => {\n    // setText(props.steps.userinput.value)\n    console.log('request 확인');\n    dispatch(chatRequest({\n      'chatKey': props.previousStep.key,\n      'chatAnswer': props.steps.userinput.value\n    }));\n    console.log(key);\n  }, [text]);\n  const answer = useSelector(state => state.chatData);\n  alert(answer); // if(answer != null){\n  //     alert('answer 잇음')\n  //     setCount(count+1),\n  //     setChatAnswer(answer)\n  //     alert(answer.data.chatKey)\n  //     if (answer.data.chatKey == key){\n  //       alert(\" 키가 맞다!!\")\n  //       setTest(answer.data.chatAnswer)\n  //     }\n  // }\n  // else{\n  //   alert('answer 없음')\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\nexport function ResetMessage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB610 \\uB2E4\\uB978 \\uAD81\\uAE08\\uD558\\uC2E0 \\uBD80\\uBD84\\uC774 \\uC788\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/jarvis/frontend/src/features/chatbot/components/ChatModules.js"],"names":["useEffect","useState","useDispatch","useSelector","chatRequest","Test","Ask","props","dispatch","key","previousStep","text","setText","count","setCount","test","setTest","chatanswer","setChatAnswer","data","chatAnswer","chatKey","alert","console","log","steps","userinput","value","answer","state","chatData","ResetMessage"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,IAAP,MAAiB,gCAAjB;;;AAEA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAEtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,GAAG,GAAGF,KAAK,CAACG,YAAN,CAAmBD,GAA/B,CAHsB,CAKtB;AACA;AACA;;AACA,QAAM,CAAEE,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEY,KAAF,EAASC,QAAT,IAAqBb,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAAEc,IAAF,EAAQC,OAAR,IAAmBf,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAAEgB,UAAF,EAAcC,aAAd,IAA+BjB,QAAQ,CAAC;AAC5CkB,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAG,EADT;AAEJC,MAAAA,OAAO,EAAE;AAFL;AADsC,GAAD,CAA7C;AAMAC,EAAAA,KAAK,CAAE,YAAWP,IAAK,EAAlB,CAAL;AACAO,EAAAA,KAAK,CAAE,aAAYT,KAAM,EAApB,CAAL;AACAb,EAAAA,SAAS,CAAC,MAAI;AACZ;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,IAAAA,QAAQ,CAACJ,WAAW,CAAC;AAAC,iBAAWG,KAAK,CAACG,YAAN,CAAmBD,GAA/B;AAAmC,oBAAaF,KAAK,CAACkB,KAAN,CAAYC,SAAZ,CAAsBC;AAAtE,KAAD,CAAZ,CAAR;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACD,GALQ,EAKP,CAACE,IAAD,CALO,CAAT;AAMA,QAAMiB,MAAM,GAAGzB,WAAW,CAAC0B,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA1B;AACAR,EAAAA,KAAK,CAACM,MAAD,CAAL,CA1BsB,CA2BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACE,sBACE;AAAA,4BACA;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAMb;AAAN;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAOH;AAGH,OAAO,SAASgB,YAAT,GAAuB;AAC9B,sBAAO;AAAA,2BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAKC","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { chatRequest } from \"features/chatbot/reducer/chatSlice\"\r\nimport Test from \"features/diary/components/Test\"\r\n\r\nexport function Ask(props){\r\n    \r\n    const dispatch = useDispatch()\r\n    const key = props.previousStep.key\r\n    \r\n    // const botAnswer = {\r\n    //   [key]:useSelector(state => state.chatData[key])\r\n    // }\r\n    const [ text, setText ] = useState('')\r\n    const [ count, setCount] = useState(0)\r\n    const [ test, setTest] = useState('')\r\n    const [ chatanswer, setChatAnswer] = useState({\r\n      data: {\r\n        chatAnswer : \"\",\r\n        chatKey: \"\"\r\n      }\r\n    })\r\n    alert(` test :: ${test}`)\r\n    alert(` count :: ${count}`)\r\n    useEffect(()=>{\r\n      // setText(props.steps.userinput.value)\r\n      console.log('request 확인')\r\n      dispatch(chatRequest({'chatKey': props.previousStep.key,'chatAnswer':props.steps.userinput.value}))\r\n      console.log(key)\r\n    },[text])\r\n    const answer = useSelector(state => state.chatData)\r\n    alert(answer)\r\n    // if(answer != null){\r\n    //     alert('answer 잇음')\r\n    //     setCount(count+1),\r\n    //     setChatAnswer(answer)\r\n    //     alert(answer.data.chatKey)\r\n    //     if (answer.data.chatKey == key){\r\n    //       alert(\" 키가 맞다!!\")\r\n    //       setTest(answer.data.chatAnswer)\r\n    //     }\r\n    \r\n    // }\r\n    // else{\r\n    //   alert('answer 없음')\r\n    // }\r\n      return (\r\n        <>\r\n        <div>{answer}</div>\r\n        <div>{test}</div>\r\n        {/* <div>{botAnswer[key]}</div> */}\r\n        </>\r\n      );\r\n  }\r\n  \r\n  \r\nexport function ResetMessage(){\r\nreturn(<>\r\n    <div>\r\n    또 다른 궁금하신 부분이 있나요?\r\n    </div>\r\n</>)\r\n}"]},"metadata":{},"sourceType":"module"}