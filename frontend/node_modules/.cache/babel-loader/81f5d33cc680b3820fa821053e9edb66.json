{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bitcamp/Desktop/jarviis-msa-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(exist),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(join),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(login),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(modify),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(watchLogin),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(watchJoin),_marked7=/*#__PURE__*/_regeneratorRuntime.mark(watchExist),_marked8=/*#__PURE__*/_regeneratorRuntime.mark(watchModify);import{call,put,takeLatest}from\"redux-saga/effects\";import{loginRequest,loginFailure,loginSuccess,joinSuccess,joinFailure,joinRequest,existSuccess,existFailure,existRequest,modifySuccess,modifyFailure}from\"features/user/reducer/userSlice\";import{userAPI}from\"features/user\";function exist(action){var result;return _regeneratorRuntime.wrap(function exist$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(userAPI.existAPI,action.payload);case 3:result=_context.sent;_context.next=6;return put(existSuccess(result));case 6:alert(\"가능한 아이디입니다.\");_context.next=14;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);_context.next=13;return put(existFailure(_context.t0));case 13:alert(\"쓸수없는 아이디입니다.\");case 14:case\"end\":return _context.stop();}}},_marked,null,[[0,9]]);}function join(action){var result;return _regeneratorRuntime.wrap(function join$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return call(userAPI.joinAPI,action.payload);case 3:result=_context2.sent;_context2.next=6;return put(joinSuccess(result));case 6:window.location.href='users/login';_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);_context2.next=13;return put(joinFailure(_context2.t0));case 13:case\"end\":return _context2.stop();}}},_marked2,null,[[0,9]]);}function login(action){var result;return _regeneratorRuntime.wrap(function login$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;alert(\"보냈지롱\");// fork는 비동기 call은 동기\n// fork를 쓰면 불러온것들을 result에 넣어줘야 하는데 바로 다음코드가 실행됨\n// 블로그에 있는 코드로는 yield 생성기 에러 자꾸남.... => const result = yield call(userAPI.join, action.payload);\n_context3.next=4;return call(userAPI.loginAPI,action.payload);case 4:result=_context3.sent;alert(\"보냈지롱2\");//요청 성공시\n_context3.next=8;return put(loginSuccess(result));case 8:// alert(JSON.stringify(result.data.user.username))\nwindow.localStorage.setItem('sessionUser',JSON.stringify(result.data.user.username));window.location.href=\"/home\";_context3.next=18;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](0);alert(JSON.stringify(action.payload));alert(\"아이디 혹은 비밀번호가 틀렸습니다!\");_context3.next=18;return put(loginFailure(_context3.t0));case 18:case\"end\":return _context3.stop();}}},_marked3,null,[[0,12]]);}function modify(action){var result;return _regeneratorRuntime.wrap(function modify$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return call(userAPI.modifyAPI,action.payload);case 3:result=_context4.sent;_context4.next=6;return put(modifySuccess(result));case 6:_context4.next=12;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);_context4.next=12;return put(modifyFailure(_context4.t0));case 12:case\"end\":return _context4.stop();}}},_marked4,null,[[0,8]]);}// Watch 함수\nexport function watchLogin(){return _regeneratorRuntime.wrap(function watchLogin$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return takeLatest(loginRequest.type,login);case 2:case\"end\":return _context5.stop();}}},_marked5);}export function watchJoin(){return _regeneratorRuntime.wrap(function watchJoin$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeLatest(joinRequest.type,join);case 2:case\"end\":return _context6.stop();}}},_marked6);}export function watchExist(){return _regeneratorRuntime.wrap(function watchExist$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return takeLatest(existRequest.type,exist);case 2:case\"end\":return _context7.stop();}}},_marked7);}export function watchModify(){return _regeneratorRuntime.wrap(function watchModify$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return takeLatest(existRequest.type,modify);case 2:case\"end\":return _context8.stop();}}},_marked8);}","map":null,"metadata":{},"sourceType":"module"}