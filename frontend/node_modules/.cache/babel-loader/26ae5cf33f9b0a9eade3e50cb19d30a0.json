{"ast":null,"code":"var _jsxFileName = \"C:\\\\jarvis\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\ChatModules.js\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { answersState } from \"../reducer/chatbotSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Ask(props) {\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const key = props.previousStep.key;\n  const botAnswer = {\n    [key]: useSelector(state => state.chatbot.answersState[key])\n  };\n  useEffect(() => {\n    setText(props.steps.userinput.value);\n    dispatch(answersState({\n      'key': props.previousStep.key,\n      'query': props.steps.userinput.value\n    }));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text == \"체크리스트\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.triggerNextStep({\n        trigger: 'fever'\n      }),\n      style: {\n        border: \"0.5px\",\n        background: 'burlywood',\n        borderRadius: \"9px\",\n        margin: \"1em 2em 5px 2em\",\n        cursor: \"pointer\",\n        boxShadow: \"1px 1px 3px 1px #cbbab0\"\n      },\n      children: \"\\uBC31\\uC2E0 \\uC811\\uC885 \\uC99D\\uC0C1 \\uCCB4\\uD06C\\uD558\\uAE30!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: botAnswer[key]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n}\nexport function ResetMessage() {\n  // localStorage.setItem(\"counter\", 0)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB610 \\uB2E4\\uB978 \\uAD81\\uAE08\\uD558\\uC2E0 \\uBD80\\uBD84\\uC774 \\uC788\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/jarvis/frontend/src/features/chatbot/components/ChatModules.js"],"names":["useEffect","useState","useDispatch","useSelector","answersState","Ask","props","dispatch","text","setText","key","previousStep","botAnswer","state","chatbot","steps","userinput","value","triggerNextStep","trigger","border","background","borderRadius","margin","cursor","boxShadow","ResetMessage"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA4B,yBAA5B;;;AAEA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAmB;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAAEM,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,GAAG,GAAGJ,KAAK,CAACK,YAAN,CAAmBD,GAA/B;AACA,QAAME,SAAS,GAAG;AAChB,KAACF,GAAD,GAAMP,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,OAAN,CAAcV,YAAd,CAA2BM,GAA3B,CAAV;AADD,GAAlB;AAGAV,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,OAAO,CAACH,KAAK,CAACS,KAAN,CAAYC,SAAZ,CAAsBC,KAAvB,CAAP;AACAV,IAAAA,QAAQ,CAACH,YAAY,CAAC;AAAC,aAAOE,KAAK,CAACK,YAAN,CAAmBD,GAA3B;AAA+B,eAAQJ,KAAK,CAACS,KAAN,CAAYC,SAAZ,CAAsBC;AAA7D,KAAD,CAAb,CAAR;AACD,GAHQ,EAGP,CAACT,IAAD,CAHO,CAAT;AAIE,sBACE;AAAA,cAECA,IAAI,IAAI,OAAR,gBAAkB;AAAQ,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACY,eAAN,CAAsB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAtB,CAAvB;AACnB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,OAAR;AAAiBC,QAAAA,UAAU,EAAC,WAA5B;AAAyCC,QAAAA,YAAY,EAAE,KAAvD;AAA8DC,QAAAA,MAAM,EAAE,iBAAtE;AAAyFC,QAAAA,MAAM,EAAE,SAAjG;AAA4GC,QAAAA,SAAS,EAAE;AAAvH,OADY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAGS;AAAA,gBAAMb,SAAS,CAACF,GAAD;AAAf;AAAA;AAAA;AAAA;AAAA;AALV,mBADF;AASH;AAIH,OAAO,SAASgB,YAAT,GAAuB;AAC9B;AACA,sBAAO;AAAA,2BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAKC","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { answersState} from \"../reducer/chatbotSlice\"\r\n\r\nexport function Ask(props){\r\n    const dispatch = useDispatch()\r\n    const [ text, setText ] = useState('')\r\n    const key = props.previousStep.key\r\n    const botAnswer = {\r\n      [key]:useSelector((state)=>state.chatbot.answersState[key])\r\n    }\r\n    useEffect(()=>{\r\n      setText(props.steps.userinput.value)\r\n      dispatch(answersState({'key': props.previousStep.key,'query':props.steps.userinput.value}))\r\n    },[text])\r\n      return (\r\n        <>\r\n        {/* <div>{text}이(가) 라고 질문하신 것이 맞습니까?</div> */}\r\n        {text == \"체크리스트\" ? <button onClick={() => props.triggerNextStep({trigger: 'fever'})} \r\n        style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"1em 2em 5px 2em\", cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\"}} >\r\n          백신 접종 증상 체크하기!\r\n        </button>:<div>{botAnswer[key]}</div>}\r\n        </>\r\n      );\r\n  }\r\n  \r\n\r\n  \r\nexport function ResetMessage(){\r\n// localStorage.setItem(\"counter\", 0)\r\nreturn(<>\r\n    <div>\r\n    또 다른 궁금하신 부분이 있나요?\r\n    </div>\r\n</>)\r\n}"]},"metadata":{},"sourceType":"module"}